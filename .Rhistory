document()
library(devtools)
document()
document()
library(devtools)
library(roxygen2)
document()
install.packages("roxygen2")
library(devtools)
library(roxygen2)
document()
library(devtools)
library(roxygen2)
document()
document()
document()
devtools::documnet()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(Capr) #the CAPR package to build cohorts in R
library(DatabaseConnector) #to connect to our OMOP CDM
library(CirceR) #access the circe engine to generate ohdisql
library(magrittr) #leverage piping
PcCovidDiag <- loadComponent(system.file("extdata","PcCovidDiag.json", package = "Capr"))
AcCovidDiag <- loadComponent(system.file("extdata","AcCovidDiag.json", package = "Capr"))
IrsCovidDiag <- loadComponent(system.file("extdata","IrsCovidDiag.json", package = "Capr"))
library(Capr) #the CAPR package to build cohorts in R
library(DatabaseConnector) #to connect to our OMOP CDM
library(CirceR) #access the circe engine to generate ohdisql
library(magrittr) #leverage piping
PcCovidDiag <- loadComponent(system.file("extdata","PcCovidDiag.json", package = "Capr"))
AcCovidDiag <- loadComponent(system.file("extdata","AcCovidDiag.json", package = "Capr"))
IrsCovidDiag <- loadComponent(system.file("extdata","IrsCovidDiag.json", package = "Capr"))
EsCovidDiag <- loadComponent(system.file("extdata","EsCovidDiag.json", package = "Capr"))
cen <- loadComponent(system.file("extdata","exampleCen.json", package = "Capr"))
CovidCountCriteria1 <- loadComponent(system.file("extdata","CovidCountCriteria1.json", package = "Capr"))
CovidDiagGroup <- loadComponent(system.file("extdata","CovidDiagGroup.json", package = "Capr"))
IpVisitQuery <- loadComponent(system.file("extdata","IpVisitQuery.json", package = "Capr"))
IpVisitCSE <- loadComponent(system.file("extdata","IpVisitCSE.json", package = "Capr"))
exampleConceptLookup <- readRDS(system.file("extdata","exampleConceptLookup.rds", package = "Capr"))
componentSummary(IpVisitQuery)
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
#'
#' This function prints the contents of a component. Note 1/27/21 attributes and some other s4 classes
#' need to be implemented
#'
#' @param x the component s4 class you want to preview
#' @param showConceptSetExpressions T/F options to include concept expression list in print
#' @include LowLevelSummaryFn.R
#' @importFrom methods is
#' @return A console print summarizing the s4 component part
#' @export
showComponent <- function(x, showConceptSetExpressions = FALSE){
if(methods::is(x) != "Component"){
stop("The object is not a component")
}
cat("Meta Data", "\n")
cat("Component Class:", x@MetaData@ComponentType, "\n")
cat("Name", x@MetaData@Name, "\n")
cat("Description", x@MetaData@Description)
lineBreak(1)
if (length(x@CriteriaExpression) > 0) {
if (componentType(x) == "PrimaryCriteria"){
for (i in seq_along(x@CriteriaExpression$CriteriaList)) {
componentSummary(x@CriteriaExpression$CriteriaList[[i]])
}
componentSummary(x@CriteriaExpression$ObservationWindow)
} else if (componentType(x) == "InclusionRules") {
for (i in seq_along(x@CriteriaExpression)) {
showComponent(x@CriteriaExpression[[i]], showConceptSetExpressions = showConceptSetExpressions)
}
} else {
for (i in seq_along(x@CriteriaExpression)) {
componentSummary(x@CriteriaExpression[[i]])
}
}
}
if (length(x@Limit) > 0) {
tt <- paste0(names(x@Limit),":")
lim <- x@Limit[[1]]@Type
cat("\n",tt, lim, "\n")
}
if (showConceptSetExpressions) {
lineBreak(1)
if (length(x@ConceptSetExpression) > 0) {
for (i in seq_along(x@ConceptSetExpression)) {
componentSummary(x@ConceptSetExpression[[i]])
}
}
}
}
showComponent(IpVisitQuery)
#'
#' This function prints the contents of a component. Note 1/27/21 attributes and some other s4 classes
#' need to be implemented
#'
#' @param x the component s4 class you want to preview
#' @param showConceptSetExpressions T/F options to include concept expression list in print
#' @include LowLevelSummaryFn.R
#' @importFrom methods is
#' @return A console print summarizing the s4 component part
#' @export
showComponent <- function(x, showConceptSetExpressions = FALSE){
if(methods::is(x) != "Component"){
stop("The object is not a component")
}
cat("Meta Data", "\n")
lineBreak(3)
cat("Component Class:", x@MetaData@ComponentType, "\n")
cat("Name", x@MetaData@Name, "\n")
cat("Description", x@MetaData@Description)
lineBreak(1)
if (length(x@CriteriaExpression) > 0) {
if (componentType(x) == "PrimaryCriteria"){
for (i in seq_along(x@CriteriaExpression$CriteriaList)) {
componentSummary(x@CriteriaExpression$CriteriaList[[i]])
}
componentSummary(x@CriteriaExpression$ObservationWindow)
} else if (componentType(x) == "InclusionRules") {
for (i in seq_along(x@CriteriaExpression)) {
showComponent(x@CriteriaExpression[[i]], showConceptSetExpressions = showConceptSetExpressions)
}
} else {
for (i in seq_along(x@CriteriaExpression)) {
componentSummary(x@CriteriaExpression[[i]])
}
}
}
if (length(x@Limit) > 0) {
tt <- paste0(names(x@Limit),":")
lim <- x@Limit[[1]]@Type
cat("\n",tt, lim, "\n")
}
if (showConceptSetExpressions) {
lineBreak(1)
if (length(x@ConceptSetExpression) > 0) {
for (i in seq_along(x@ConceptSetExpression)) {
componentSummary(x@ConceptSetExpression[[i]])
}
}
}
}
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
#'
#' This function prints the contents of a component. Note 1/27/21 attributes and some other s4 classes
#' need to be implemented
#'
#' @param x the component s4 class you want to preview
#' @param showConceptSetExpressions T/F options to include concept expression list in print
#' @include LowLevelSummaryFn.R
#' @importFrom methods is
#' @return A console print summarizing the s4 component part
#' @export
showComponent <- function(x, showConceptSetExpressions = FALSE){
if(methods::is(x) != "Component"){
stop("The object is not a component")
}
cat("Meta Data")
lineBreak(3)
cat("Component Class:", x@MetaData@ComponentType, "\n")
cat("Name", x@MetaData@Name, "\n")
cat("Description", x@MetaData@Description)
lineBreak(1)
if (length(x@CriteriaExpression) > 0) {
if (componentType(x) == "PrimaryCriteria"){
for (i in seq_along(x@CriteriaExpression$CriteriaList)) {
componentSummary(x@CriteriaExpression$CriteriaList[[i]])
}
componentSummary(x@CriteriaExpression$ObservationWindow)
} else if (componentType(x) == "InclusionRules") {
for (i in seq_along(x@CriteriaExpression)) {
showComponent(x@CriteriaExpression[[i]], showConceptSetExpressions = showConceptSetExpressions)
}
} else {
for (i in seq_along(x@CriteriaExpression)) {
componentSummary(x@CriteriaExpression[[i]])
}
}
}
if (length(x@Limit) > 0) {
tt <- paste0(names(x@Limit),":")
lim <- x@Limit[[1]]@Type
cat("\n",tt, lim, "\n")
}
if (showConceptSetExpressions) {
lineBreak(1)
if (length(x@ConceptSetExpression) > 0) {
for (i in seq_along(x@ConceptSetExpression)) {
componentSummary(x@ConceptSetExpression[[i]])
}
}
}
}
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IpVisitQuery)
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
lineBreak(2)
lineBreak(3)
lineBreak(1)
lineBreak <- function(t = c(1,2,3,4)) {
if (t == 1){
cat("\n=====================================================================\n")
}
if (t == 2) {
cat("\n----------------------------\n")
}
if (t ==3) {
cat("\n______________\n")
}
if (t == 4){
cat("\n***\n")
}
}
lineBreak(1)
lineBreak(2)
lineBreak(3)
lineBreak(4)
lineBreak <- function(t = c(1,2,3,4)) {
if (t == 1){
cat("\n=====================================================================\n")
}
if (t ==2) {
cat("\n______________________________________________\n")
}
if (t == 3) {
cat("\n----------------------------\n")
}
if (t == 4){
cat("\n***\n")
}
}
lineBreak(2)
lineBreak(3)
lineBreak(4)
lineBreak <- function(t = c(1,2,3,4)) {
if (t == 1){
cat("\n=====================================================================\n")
}
if (t ==2) {
cat("\n______________________________________________\n")
}
if (t == 3) {
cat("\n----------------------------\n")
}
if (t == 4){
cat("\n*****\n")
}
}
lineBreak(4)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
showComponent(PcCovidDiag, showConceptSetExpressions = TRUE)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag, showConceptSetExpressions = TRUE)
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
showComponent(PcCovidDiag, showFullConceptSetExpressions = T)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag, showFullConceptSetExpressions = T)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag, showFullConceptSetExpressions = T)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag, showFullConceptSetExpressions = T)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag, showFullConceptSetExpressions = T)
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
showComponent(IrsCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(IrsCovidDiag)
showComponent(CovidCountCriteria1)
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
showComponent(CovidCountCriteria1)
showComponent(PcCovidDiag)
showComponent(CovidCountCriteria1)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(CovidCountCriteria1)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(CovidCountCriteria1)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(CovidCountCriteria1)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
source('~/Documents/github/OHDSI/Capr/Capr/R/LowLevelSummaryFn.R')
showComponent(PcCovidDiag)
showComponent(CovidCountCriteria1)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
